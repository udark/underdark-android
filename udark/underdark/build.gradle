apply plugin: 'com.android.library'
apply plugin: 'publishing'
apply plugin: "maven-publish"

def ud_artifact = 'underdark'
def ud_group = 'io.underdark'
def ud_version = '1.0.10'
def ud_versionCode = 9

project.version = ud_version
project.group = ud_group

def ud_description = "Underdark peer-to-peer networking library"

def siteUrl = 'https://github.com/virl/underdark-android'
def gitUrl = 'https://github.com/virl/underdark-android.git'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'

        //classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.5"
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    resourcePrefix "underdark__"

    // http://stackoverflow.com/a/24910671/1449965
    //publishNonDefault true

    defaultPublishConfig "debug"
    //defaultPublishConfig "release"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 24
        versionCode ud_versionCode
        versionName ud_version
    }
    buildTypes {
        debug {
            buildConfigField "Boolean", "DEBUG_MY", "true"
        }
        release {
            buildConfigField "Boolean", "DEBUG_MY", "false"
            //minifyEnabled true
            //proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    /*dexOptions {
        incremental true
        preDexLibraries false
    }*/
} // android

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'org.slf4j:slf4j-api:1.7.12'
    //compile 'io.netty:netty-buffer:4.1.0.Beta5'
    compile 'com.google.protobuf:protobuf-java:2.6.1'

    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'org.slf4j:slf4j-jdk14:1.7.12'
}

/*task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}*/

task javadoc(type: Javadoc) {
    /*description "Underdark javadoc"
    source = variant.javaCompile.source
    ext.androidJar = "${android.plugin.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)*/

    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

    include "**/io/underdark/**"
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    exclude "**/impl/underdark/**"
    from javadoc.destinationDir
    //options.encoding = 'UTF-8'
}

artifacts {
    archives javadocJar
    //archives sourcesJar
}

apply plugin: 'com.github.dcendents.android-maven'

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId ud_group
                artifactId ud_artifact
                //version ud_version

                name 'Underdark'
                description ud_description
                url siteUrl

                licenses {
                    license {
                        name 'Proprietary'
                        url 'http://'
                    }
                }
                developers {
                    developer {
                        id 'virl'
                        name 'Vladimir "Virl" Shabanov'
                        email 'virlof@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
} // install

apply plugin: 'com.jfrog.bintray'

bintray {
    Properties props = new Properties()

    user = ""
    key = ""

    try {
        props.load(project.file('bintray.properties').newDataInputStream())
    }
    catch (Exception ex) {
    }

    user = props.getProperty("bintray.user")
    key = props.getProperty("bintray.apikey")

    configurations = ['archives']

    pkg {
        userOrg = "underdark"
        repo = "android"
        name = "underdark"
        desc = ud_description
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = false //If version should be auto published after an upload

        version {
            //name = ud_version
            desc = ud_description
            //released = new Date()
        }
    }
}

bintrayUpload.dependsOn install

project.afterEvaluate {
    bintray.publications.each { pub ->
        bintrayUpload.inputs.files { -> project.publishing.publications.getByName(pub).publishableFiles }
    }
}

